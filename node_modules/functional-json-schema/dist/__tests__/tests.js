"use strict";
exports.__esModule = true;
var index_1 = require("../lib/index");
describe('types', function () {
    test('type()', function () {
        expect(index_1.types.type('string')).toEqual({
            "__typename": 'TypeDescriptor',
            "required": false,
            "rawType": { "type": "string" }
        });
    });
    test('required()', function () {
        expect(index_1.constraints.required(index_1.types.type('string'), true)).toEqual({
            "__typename": 'TypeDescriptor',
            "required": true,
            "rawType": { "type": "string" }
        });
    });
    test('normalize()', function () {
        expect(index_1.types.normalize('string')).toEqual({
            "__typename": 'TypeDescriptor',
            "required": false,
            "rawType": { "type": "string" }
        });
    });
    describe('arrayOf()', function () {
        test('arrayOf() from JSONSchema6TypeName', function () {
            expect(index_1.types.arrayOf('string')).toEqual({
                "__typename": 'TypeDescriptor',
                "required": false,
                "rawType": {
                    "items": { "type": "string" },
                    "type": "array"
                }
            });
        });
        test('arrayOf() from TypeDescriptor', function () {
            expect(index_1.types.arrayOf(index_1.types.type('string'))).toEqual({
                "__typename": 'TypeDescriptor',
                "required": false,
                "rawType": {
                    "items": { "type": "string" },
                    "type": "array"
                }
            });
        });
    });
});
